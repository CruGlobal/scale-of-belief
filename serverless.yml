service: scale-of-belief

custom:
  scripts:
    hooks:
      # Run database migrations
      'aws:deploy:finalize:cleanup': './node_modules/.bin/serverless --stage $ENVIRONMENT invoke --function migrate'

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  environment: ${file(serverless/environment.js)}
  $<<: ${file(serverless/provider.js)}

functions:
  placement:
    handler: kinesis/placement.handler
    timeout: 300
    events:
      - stream:
          arn: ${env:KINESIS_SNOWPLOW_ENRICH_ARN}
          batchSize: 25
          startingPosition: LATEST
          enabled: true
  api:
    handler: api/index.handler
    timeout: 30
    events:
      - http:
          path: /api/{any+}
          method: ANY
          cors:
            origin: '*'
            maxAge: 86400
  migrate:
    handler: db/migrate.handler
    timeout: 120
  redshift:
    handler: scheduled/redshift.handler
    timeout: 300
    events:
      - schedule: rate(5 minutes)
  refresh-unscored:
    handler: scheduled/refresh-materialized.handler
    timeout: 300
    events:
      - schedule: rate(2 hours)
  campaign:
    handler: sns/campaign.handler
    timeout: 60
    events:
      - sns: ${env:SNS_TOPIC_ARN}
  global-registry:
    handler: sns/global-registry.handler
    timeout: 30
    events:
      - sns: ${env:SNS_TOPIC_ARN}
  cru-org-sync:
    handler: scheduled/cru-org-sync.handler
    timeout: 300
    events:
      - schedule: rate(4 hours)
  sync-score:
    handler: sns/sync-score.handler
    timeout: 30
    events:
      - sns: ${env:AEM_SNS_TOPIC_ARN}
  udp-event:
    handler: sqs/udp-event.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ UDPEnrichedEventsQueue, Arn ]
          batchSize: 1
    deadLetter:
      targetArn:
        GetResourceArn: UDPEnrichedEventsDLQ

package:
  exclude:
    - .git/**
    - test/**
    - '**/*.test.js'
    - '**/*.sql'
    - .deployment/**

plugins:
  - '@cruglobal/serverless-merge-config'
  - serverless-plugin-bind-deployment-id
  - serverless-plugin-scripts
  - serverless-plugin-lambda-dead-letter
  - serverless-offline

resources:
  $<<: ${file(serverless/resources.js)}
